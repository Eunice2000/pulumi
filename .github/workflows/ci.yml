 

name: CI Pipeline
name: CI Pipeline
on:
on:
  pull_request:
  push:
    branches:
    branches:
      - main

jobs:
  test-backend:
  test-backend:
    runs-on: ubuntu-latest
    runs-on: ubuntu-latest
    steps:
    steps:
      - name: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        uses: actions/checkout@v3 
      - name: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        uses: actions/setup-node@v3
        with:
        with:
          node-version: 18
          node-version: 18 
      - name: Install backend dependencies
      - name: Navigate to /app and install dependencies    
        run: |
          cd app
        run: npm install
          npm install
        working-directory: app
      - name: Run backend tests
        run: npm test
        working-directory: app

 preview-infra:
  test-infra:
    runs-on: ubuntu-latest
    runs-on: ubuntu-latest
    needs: test-backend
		
    steps:
      - name: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        uses: actions/checkout@v3
      
      - name: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        uses: actions/setup-node@v3
        with:
        with:
          node-version: 18
          node-version: 18
      
      - name: Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        uses: google-github-actions/auth@v2
        with:
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      
      - name: Set up gcloud CLI
      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        uses: google-github-actions/setup-gcloud@v2
        with:
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          project_id: ${{ secrets.PROJECT_ID }}
      
      - name: Verify Authentication
        run: gcloud auth list
      
      - name: Set up Pulumi
      - name: Set up Pulumi
        uses: pulumi/actions@v4
        uses: pulumi/actions@v4
        with:
        with:
          pulumi-access-token: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          pulumi-access-token: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      
      - name: Configure Pulumi Backend (Google Cloud Storage)
      - name: Configure Pulumi Backend (Google Cloud Storage)
        run: |
        run: |
          echo "Setting up Pulumi backend storage in GCS..."
          echo "PULUMI_BACKEND_URL=gs://shortlet-pulumi-state" >> $GITHUB_ENV
          echo "PULUMI_BACKEND_URL=gs://shortlet-pulumi-state" >> $GITHUB_ENV
          echo "PULUMI_CONFIG_PASSPHRASE=${{ secrets.PULUMI_CONFIG_PASSPHRASE }}" >> $GITHUB_ENV
          echo "PULUMI_CONFIG_PASSPHRASE=${{ secrets.PULUMI_CONFIG_PASSPHRASE }}" >> $GITHUB_ENV
      
      - name: Install infra dependencies
      - name: Install dependencies for infra
        run: npm install
        run: npm install
        working-directory: infra
        working-directory: infra

 - name: Run Pulumi Preview for Development
        uses: pulumi/actions@v6
        with:
          command: preview
          stack-name: development
          comment-on-pr: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          work-dir: infra
          upsert: true
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          PULUMI_BACKEND_URL: gs://shortlet-pulumi-state
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
    
  - name: Initialize or Select Pulumi Stack (staging)
        run: |
          pulumi stack select development --cwd infra || pulumi stack init staging --cwd infra
        env:
          PULUMI_BACKEND_URL: gs://shortlet-pulumi-state
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}



- name: Preview staging stack

        uses: pulumi/actions@v6
        with:
          command: preview
          stack-name: staging
          comment-on-pr: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          work-dir: infra
          upsert: true

        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          PULUMI_BACKEND_URL: gs://shortlet-pulumi-state
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}

